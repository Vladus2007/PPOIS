{
  "api/PPOISFirstFirst.DefaultLengthCalculator.html": {
    "href": "api/PPOISFirstFirst.DefaultLengthCalculator.html",
    "title": "Class DefaultLengthCalculator | mysite",
    "summary": "Class DefaultLengthCalculator Namespace PPOISFirstFirst Assembly PPOISFirstFirst.dll public class DefaultLengthCalculator : ILength Inheritance object DefaultLengthCalculator Implements ILength Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalculateLength(double, double, double) public double CalculateLength(double x, double y, double z) Parameters x double y double z double Returns double"
  },
  "api/PPOISFirstFirst.ILength.html": {
    "href": "api/PPOISFirstFirst.ILength.html",
    "title": "Interface ILength | mysite",
    "summary": "Interface ILength Namespace PPOISFirstFirst Assembly PPOISFirstFirst.dll public interface ILength Methods CalculateLength(double, double, double) double CalculateLength(double x, double y, double z) Parameters x double y double z double Returns double"
  },
  "api/PPOISFirstFirst.Vector.html": {
    "href": "api/PPOISFirstFirst.Vector.html",
    "title": "Class Vector | mysite",
    "summary": "Class Vector Namespace PPOISFirstFirst Assembly PPOISFirstFirst.dll Представляет трехмерный вектор с координатами X, Y, Z и вычисляемой длиной public class Vector Inheritance object Vector Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Vector(double, double, double) Инициализирует новый экземпляр вектора по координатам public Vector(double x, double y, double z) Parameters x double X-координата y double Y-координата z double Z-координата Vector(double, double, double, ILength) Инициализирует новый экземпляр вектора с пользовательским калькулятором длины public Vector(double x, double y, double z, ILength lengthCalculator) Parameters x double X-координата y double Y-координата z double Z-координата lengthCalculator ILength Калькулятор длины вектора Exceptions ArgumentNullException Выбрасывается, если lengthCalculator равен null Vector(double, double, double, double, double, double) Инициализирует новый экземпляр вектора по двум точкам в пространстве public Vector(double x1, double x2, double y1, double y2, double z1, double z2) Parameters x1 double X-координата первой точки x2 double X-координата второй точки y1 double Y-координата первой точки y2 double Y-координата второй точки z1 double Z-координата первой точки z2 double Z-координата второй точки Properties Length Длина вектора public double Length { get; } Property Value double X Координата X вектора public double X { get; } Property Value double Y Координата Y вектора public double Y { get; } Property Value double Z Координата Z вектора public double Z { get; } Property Value double Methods Equals(object) Определяет, равен ли указанный объект текущему вектору public override bool Equals(object obj) Parameters obj object Объект для сравнения Returns bool True если объекты равны, иначе False GetHashCode() Возвращает хэш-код для текущего вектора public override int GetHashCode() Returns int Хэш-код, основанный на координатах X, Y, Z ToString() Возвращает строковое представление вектора public override string ToString() Returns string Строка в формате \"Vector(X: {X}, Y: {Y}, Z: {Z}, Length: {Length})\" Operators operator +(Vector, Vector) Складывает два вектора public static Vector operator +(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns Vector Новый вектор, являющийся суммой двух векторов Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null operator /(Vector, double) Делит вектор на скаляр public static Vector operator /(Vector vector, double scalar) Parameters vector Vector Вектор для деления scalar double Скалярное значение Returns Vector Новый вектор, разделенный на скаляр Exceptions ArgumentNullException Выбрасывается, если вектор равен null DivideByZeroException Выбрасывается, если скаляр равен нулю operator ^(Vector, Vector) Вычисляет косинус угла между двумя векторами public static double operator ^(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns double Косинус угла между векторами Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null InvalidOperationException Выбрасывается, если длина любого из векторов равна нулю operator >(Vector, Vector) Проверяет, больше ли один вектор другого по двум координатам при равенстве третьей public static bool operator >(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns bool True если вектор a больше вектора b по двум координатам Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null operator >=(Vector, Vector) Проверяет, больше или равен ли один вектор другого по двум координатам при равенстве третьей public static bool operator >=(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns bool True если вектор a больше или равен вектору b по двум координатам Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null operator <(Vector, Vector) Проверяет, меньше ли один вектор другого по двум координатам при равенстве третьей public static bool operator <(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns bool True если вектор a меньше вектора b по двум координатам Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null operator <=(Vector, Vector) Проверяет, меньше или равен ли один вектор другого по двум координатам при равенстве третьей public static bool operator <=(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns bool True если вектор a меньше или равен вектору b по двум координатам Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null operator *(Vector, Vector) Вычисляет векторное произведение двух векторов public static Vector operator *(Vector a, Vector b) Parameters a Vector Первый вектор b Vector Второй вектор Returns Vector Новый вектор, являющийся векторным произведением Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null operator *(Vector, double) Умножает вектор на скаляр public static Vector operator *(Vector vector, double scalar) Parameters vector Vector Вектор для умножения scalar double Скалярное значение Returns Vector Новый вектор, умноженный на скаляр Exceptions ArgumentNullException Выбрасывается, если вектор равен null operator *(double, Vector) Умножает скаляр на вектор public static Vector operator *(double scalar, Vector vector) Parameters scalar double Скалярное значение vector Vector Вектор для умножения Returns Vector Новый вектор, умноженный на скаляр Exceptions ArgumentNullException Выбрасывается, если вектор равен null operator -(Vector, Vector) Вычитает один вектор из другого public static Vector operator -(Vector a, Vector b) Parameters a Vector Вектор, из которого вычитают b Vector Вектор, который вычитают Returns Vector Новый вектор, являющийся разностью двух векторов Exceptions ArgumentNullException Выбрасывается, если любой из векторов равен null"
  },
  "api/PPOISFirstFirst.html": {
    "href": "api/PPOISFirstFirst.html",
    "title": "Namespace PPOISFirstFirst | mysite",
    "summary": "Namespace PPOISFirstFirst Classes DefaultLengthCalculator Vector Представляет трехмерный вектор с координатами X, Y, Z и вычисляемой длиной Interfaces ILength"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | mysite",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | mysite",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | mysite",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}